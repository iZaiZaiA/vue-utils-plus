import{_ as a,o as n,c as s,e as t}from"./app.2172ecdc.js";const e={},o=t(`<h1 id="对象处理" tabindex="-1"><a class="header-anchor" href="#对象处理" aria-hidden="true">#</a> 对象处理</h1><p>各种对象处理操作的方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> utilsObject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-utils-plus&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="判断一个对象是否存在key" tabindex="-1"><a class="header-anchor" href="#判断一个对象是否存在key" aria-hidden="true">#</a> 判断一个对象是否存在key</h2><p><code>hasKey()</code> <code>支持版本：V0.0.2</code></p><h3 id="参数说明" tabindex="-1"><a class="header-anchor" href="#参数说明" aria-hidden="true">#</a> 参数说明</h3><p>如果传入第二个参数key，则是判断这个obj对象是否存在key这个属性</p><p>如果没有传入key这个参数，则判断obj对象是否有键值对</p><table><thead><tr><th>参数</th><th>类型</th><th>可选值</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>obj</td><td>-</td><td>-</td><td>-</td><td>欲拷贝的数据</td></tr><tr><td>key</td><td>-</td><td>-</td><td>-</td><td>是否存在key</td></tr></tbody></table><h3 id="返回内容" tabindex="-1"><a class="header-anchor" href="#返回内容" aria-hidden="true">#</a> 返回内容</h3><table><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>Boolean</td><td>返回 <code>true</code> 或 <code>false</code></td></tr></tbody></table><h3 id="code示例" tabindex="-1"><a class="header-anchor" href="#code示例" aria-hidden="true">#</a> code示例</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> hasKey <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">utilsObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">}</span>

<span class="token function">hasKey</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="判断两个对象是否相等" tabindex="-1"><a class="header-anchor" href="#判断两个对象是否相等" aria-hidden="true">#</a> 判断两个对象是否相等</h2><p><code>objEqual()</code> <code>支持版本：V0.0.3</code></p><h3 id="参数说明-1" tabindex="-1"><a class="header-anchor" href="#参数说明-1" aria-hidden="true">#</a> 参数说明</h3><p>这两个对象的值只能是数字或字符串</p><table><thead><tr><th>参数</th><th>类型</th><th>可选值</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>obj1</td><td>-</td><td>-</td><td>-</td><td>对象数据</td></tr><tr><td>obj2</td><td>-</td><td>-</td><td>-</td><td>对象数据</td></tr></tbody></table><h3 id="返回内容-1" tabindex="-1"><a class="header-anchor" href="#返回内容-1" aria-hidden="true">#</a> 返回内容</h3><table><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>Boolean</td><td>返回 <code>true</code> 或 <code>false</code></td></tr></tbody></table><h3 id="code示例-1" tabindex="-1"><a class="header-anchor" href="#code示例-1" aria-hidden="true">#</a> code示例</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> objEqual <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">utilsObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">}</span>

<span class="token function">objEqual</span><span class="token punctuation">(</span>obj1<span class="token punctuation">,</span>obj2<span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="对象深拷贝" tabindex="-1"><a class="header-anchor" href="#对象深拷贝" aria-hidden="true">#</a> 对象深拷贝</h2><p><code>deepClone()</code> <code>支持版本：V0.0.3</code></p><h3 id="参数说明-2" tabindex="-1"><a class="header-anchor" href="#参数说明-2" aria-hidden="true">#</a> 参数说明</h3><table><thead><tr><th>参数</th><th>类型</th><th>可选值</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>data</td><td>-</td><td>-</td><td>-</td><td>欲拷贝的数据</td></tr></tbody></table><h3 id="返回内容-2" tabindex="-1"><a class="header-anchor" href="#返回内容-2" aria-hidden="true">#</a> 返回内容</h3><table><thead><tr><th>参数名</th><th>说明</th></tr></thead><tbody><tr><td>-</td><td>拷贝后的数据</td></tr></tbody></table><h3 id="code示例-2" tabindex="-1"><a class="header-anchor" href="#code示例-2" aria-hidden="true">#</a> code示例</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> deepClone <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">utilsObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">22</span><span class="token punctuation">}</span>

<span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// {id: 11, name: 22}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),p=[o];function d(c,r){return n(),s("div",null,p)}const i=a(e,[["render",d],["__file","index.html.vue"]]);export{i as default};
