import{_ as s,j as n,k as a,a5 as e}from"./app.85641af9.js";import"./vendor.addf9944.js";const t={},p=e(`<h1 id="系统内置记录" tabindex="-1"><a class="header-anchor" href="#系统内置记录" aria-hidden="true">#</a> 系统内置记录</h1><p>一些 js 内置的 数组操作的方法函数记录文章。</p><h2 id="是否包含" tabindex="-1"><a class="header-anchor" href="#是否包含" aria-hidden="true">#</a> 是否包含</h2><p><code>includes() </code> 返回布尔值，表示是否找到了参数字符串。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;Hello world!&#39;</span><span class="token punctuation">;</span>
str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;o&#39;</span><span class="token punctuation">)</span>  <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="是否在头部" tabindex="-1"><a class="header-anchor" href="#是否在头部" aria-hidden="true">#</a> 是否在头部</h2><p><code>startsWith()</code> 返回布尔值，表示参数字符串是否在原字符串的头部。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;Hello world!&#39;</span><span class="token punctuation">;</span>
str<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;Hello&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="是否在尾部" tabindex="-1"><a class="header-anchor" href="#是否在尾部" aria-hidden="true">#</a> 是否在尾部</h2><p><code>endsWith()</code> 返回布尔值，表示参数字符串是否在原字符串的尾部。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;Hello world!&#39;</span><span class="token punctuation">;</span>
str<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&#39;!&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字符串重复" tabindex="-1"><a class="header-anchor" href="#字符串重复" aria-hidden="true">#</a> 字符串重复</h2><p><code>repeat()</code> 返回一个新字符串，表示将原字符串重复 <code>n</code> 次。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> str  <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
str<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// &quot;hellohello&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="头部补全" tabindex="-1"><a class="header-anchor" href="#头部补全" aria-hidden="true">#</a> 头部补全</h2><p><code>padStart() </code> 字符串不够指定长度，将头部补全</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> str  <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>
str<span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token string">&#39;vue-&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;vue-hello&#39;</span>

<span class="token comment">//处理日期时间格式时，比较好用</span>
<span class="token keyword">let</span> str  <span class="token operator">=</span> <span class="token string">&#39;2&#39;</span>
str<span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;02&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="尾部补全" tabindex="-1"><a class="header-anchor" href="#尾部补全" aria-hidden="true">#</a> 尾部补全</h2><p><code>padEnd()</code> 字符串不够指定长度，将尾部补全。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> str  <span class="token operator">=</span> <span class="token string">&#39;2&#39;</span>
str<span class="token punctuation">.</span><span class="token function">padEnd</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;20&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="消除头部空格" tabindex="-1"><a class="header-anchor" href="#消除头部空格" aria-hidden="true">#</a> 消除头部空格</h2><p><code>trimStart()</code> 消除字符串头部的空格(返回的都是新字符串，不会修改原始字符串)</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;  hello&#39;</span><span class="token punctuation">;</span>
str<span class="token punctuation">.</span><span class="token function">trimStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &quot;hello&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="消除尾部空格" tabindex="-1"><a class="header-anchor" href="#消除尾部空格" aria-hidden="true">#</a> 消除尾部空格</h2><p><code>trimEnd()</code> 消除尾部的空格 (返回的都是新字符串，不会修改原始字符串)</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;hello  &#39;</span><span class="token punctuation">;</span>
str<span class="token punctuation">.</span><span class="token function">trimEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &quot;hello&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="替换所有匹配" tabindex="-1"><a class="header-anchor" href="#替换所有匹配" aria-hidden="true">#</a> 替换所有匹配</h2><p><code>matchAll()</code> 返回一个正则表达式在当前字符串的所有匹配 <code>replaceAll()</code> 可以一次性替换所有匹配。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;aabbcc&#39;</span><span class="token punctuation">;</span>
str<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;_&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &#39;aa__cc&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="索引" tabindex="-1"><a class="header-anchor" href="#索引" aria-hidden="true">#</a> 索引</h2><p><code>at()</code> 接受一个整数作为参数，返回参数指定位置的字符，支持负索引</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span>
str<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// &quot;e&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="取输入框的光标所在位置" tabindex="-1"><a class="header-anchor" href="#取输入框的光标所在位置" aria-hidden="true">#</a> 取输入框的光标所在位置</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> specialDom <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;输入框ID&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> startPos <span class="token operator">=</span> specialDom<span class="token operator">?.</span>selectionStart <span class="token operator">||</span> <span class="token number">0</span>
<span class="token keyword">const</span> endPos <span class="token operator">=</span> specialDom<span class="token operator">?.</span>selectionEnd <span class="token operator">||</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>vue方式</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-input</span> <span class="token attr-name">@blur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>specialInputBlur<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">//失去焦点事件，当然也可以用鼠标右键事件等获取</span>
    <span class="token keyword">const</span> <span class="token function-variable function">specialInputBlur</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> startPos <span class="token operator">=</span> e<span class="token operator">?.</span>target<span class="token operator">?.</span>selectionStart <span class="token operator">||</span> <span class="token number">0</span>
        <span class="token keyword">const</span> endPos <span class="token operator">=</span> e<span class="token operator">?.</span>target<span class="token operator">?.</span>selectionEnd <span class="token operator">||</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,36),c=[p];function o(l,i){return n(),a("div",null,c)}const u=s(t,[["render",o],["__file","text.html.vue"]]);export{u as default};
